survival_rate_men = round((male_adult_survived / male_adult_sum)*100)
survival_rate_women = round((women_Children_survived / women_Children_sum)*100)
cat('male_adult_survived ', male_adult_survived, '\n')
cat('male_adult_sum ', male_adult_sum, '\n')
cat('survival_rate_men ', survival_rate_men, '\n')
cat('women_Children_survived ', women_Children_survived, '\n')
cat('women_Children_sum ', women_Children_sum, '\n')
cat('survival_rate_women ', survival_rate_women, '\n')
cat("In the ",ticket_class, " class, " ,survival_rate_women,
"% of women and children survived and " ,survival_rate_men, "% of men survived.\n",
sep="")
}
## Call your `survival_rate()` function on each of the ticketing classes (`Crew`, `1st`, `2nd`, and `3rd`)
survival_rate("Crew")
survival_rate("1st")
survival_rate("2nd")
survival_rate("3rd")
get_col_mean <- function(column, df){
return(mean(df[column], na.rm = TRUE))
}
col_means <- lapply(colnames(life_exp)[-1], get_col_mean, life_exp)
life_exp <- data.frame(
countries = c('USA',  'CAN'),
val.1 = c(5, 1),
val.2 = c(21, 3)
)
col_means <- lapply(colnames(life_exp)[-1], get_col_mean, life_exp)
get_col_mean('val.1', life.exp)
get_col_mean('val.1', life_exp)
get_col_mean <- function(column, df){
return(mean(df[, column]))
}
get_col_mean('val.1', life_exp)
col_means <- lapply(colnames(life_exp)[-1], get_col_mean, life_exp)
col_means
rlang
get_average <- function(df, column) {
df %>%
summarize(mean = mean({{ column }}))
}
library(dplyr)
animals <- data.frame(
name = c('Koalas', 'Kangaroos', 'Spiders'),
legs = c(4, 2, 8),
eyes = c(2, 2, 8)
)
get_average(animalls, legs)
get_average(animals, legs)
get_average(animals, 'legs')
install.packages('dplyr')
install.packages("dplyr")
get_average <- function(df, column) {
df %>%
summarize(mean = mean({{ column }}))
}
get_average(animals, 'legs')
library(dplyr)
get_average(animals, 'legs')
get_average <- function(df, column) {
df %>%
summarize(mean = mean(!!as.sym(column)))
}
get_average(animals, 'legs')
get_average <- function(df, column) {
df %>%
summarize(mean = mean(!!as.name(column)))
}
get_average(animals, 'legs')
filter_to <- function(df, column, value) {
df %>%
filter(!!as.name(column) == value)
}
filter_to(animals, 'legs', 4)
filter_to(animals, 'legs', 2)
filter_to(animals, 'eyes', 2)
sapply(columns_to_try, filter_to, 2)
columns_to_try <- c('legs', 'eyes')
sapply(columns_to_try, filter_to, 2)
filter_to <- function(column, df, value) {
df %>%
filter(!!as.name(column) == value)
}
filter_to('legs', animals, 2)
filter_to('eyes', animals, 2)
columns_to_try <- c('legs', 'eyes')
sapply(columns_to_try, filter_to, 2)
sapply(columns_to_try, filter_to, animals, 2)
lapply(columns_to_try, filter_to, animals, 2)
state
state.name
state.area
df <- data.frame(
state = state.name,
area = state.area
)
library(dplyr)
df <- data.frame(
state = state.name,
area = state.area
)
mutate(df, state = tolower(state))
my_age <- 20
my_name <- "Andrey"
24 * 2
my_age <- 20
my_name <- "Andrey"
print(my_name)
24 x 2
24 * 2
install.packages('tidyverse')
?install.packages
library(dplyr)
pop <- rep("S", 1000)
pr_pox <- .2
data <- data.frame(
id = 1:1000,
year_0 = pop,
stringsAsFactors = F
)
for(i in 1:15) {
# Store this year's column and last year's column names in variables
# To start, set this year in the data as status from last year
# Create a data frame of new *infected* cases by giving every susceptible
# a probability of getting infected (using rbinom())
# Join your dataframe of new_cases onto the old dataframe
# Replace the current year's values as infected where infections happened
# Set infected from last year to resistent this year
# Drop the `infected` column (so it can be recreated in the next iteration)
}
this_year <- paste0('year_', i)
last_year <- paste0('year_', i - 1)
i = 1
this_year <- paste0('year_', i)
last_year <- paste0('year_', i - 1)
this_year
data[this_year] <- data[last_year]
install.packages("EpiModel", dependencies = TRUE)
library(EpiModel)
library(EpiModel)
param <- param.dcm(inf.prob = 0.2, act.rate = 0.25, rec.rate = 1 / 2)
init <- init.dcm(s.num = 500, i.num = 1)
control <- control.dcm(type = "SIR", nsteps = 500)
mod <- dcm(param, init, control)
mod
init <- init.dcm(s.num = 500, i.num = 1, r.num = 0)
control <- control.dcm(type = "SIR", nsteps = 500)
mod <- dcm(param, init, control)
mod
plot(mod)
param <- param.dcm(inf.prob = 0.2, act.rate = 10, rec.rate = 1 / 2)
init <- init.dcm(s.num = 500, i.num = 1, r.num = 0)
control <- control.dcm(type = "SIR", nsteps = 500)
mod <- dcm(param, init, control)
mod
plot(mod)
param <- param.dcm(inf.prob = 0.2, act.rate = 1, rec.rate = 1 / 2)
init <- init.dcm(s.num = 500, i.num = 1, r.num = 0)
control <- control.dcm(type = "SIR", nsteps = 500)
mod <- dcm(param, init, control)
mod
plot(mod)
param <- param.dcm(inf.prob = 0.2, act.rate = 5, rec.rate = 1 / 2)
init <- init.dcm(s.num = 500, i.num = 1, r.num = 0)
control <- control.dcm(type = "SIR", nsteps = 500)
mod <- dcm(param, init, control)
mod
param <- param.dcm(inf.prob = 0.2, act.rate = 8, rec.rate = 1 / 2)
init <- init.dcm(s.num = 500, i.num = 1, r.num = 0)
control <- control.dcm(type = "SIR", nsteps = 500)
mod <- dcm(param, init, control)
mod
plot(mod)
param <- param.dcm(inf.prob = 0.2, act.rate = 6, rec.rate = 1 / 2)
init <- init.dcm(s.num = 500, i.num = 1, r.num = 0)
control <- control.dcm(type = "SIR", nsteps = 500)
mod <- dcm(param, init, control)
mod
plot(mod)
param <- param.dcm(inf.prob = 0.2, act.rate = 6, rec.rate = 1 / 20)
init <- init.dcm(s.num = 500, i.num = 1, r.num = 0)
control <- control.dcm(type = "SIR", nsteps = 500)
mod <- dcm(param, init, control)
mod
plot(mod)
param <- param.dcm(inf.prob = 0.3, act.rate = 6, rec.rate = 1 / 20)
init <- init.dcm(s.num = 500, i.num = 1, r.num = 0)
control <- control.dcm(type = "SIR", nsteps = 500)
mod <- dcm(param, init, control)
mod
plot(mod)
param <- param.dcm(inf.prob = 0.3, act.rate = 6, rec.rate = 1 / 100)
init <- init.dcm(s.num = 500, i.num = 1, r.num = 0)
control <- control.dcm(type = "SIR", nsteps = 500)
mod <- dcm(param, init, control)
mod
plot(mod)
param <- param.dcm(inf.prob = 0.3, act.rate = 6, rec.rate = 1 / 20)
init <- init.dcm(s.num = 500, i.num = 5, r.num = 0)
control <- control.dcm(type = "SIR", nsteps = 500)
mod <- dcm(param, init, control)
mod
plot(mod)
summary(mod, at = 50)
library(EpiModel)
shiny::runApp('478/a2-andreybutenko')
shiny::runApp('478/a2-andreybutenko')
library(dplyr)
setwd("~/478/478-final/preprocessing")
library(readxl)
library(dplyr)
?read_excel
raw_data <- read.excel('../data/raw/FTA - 2018 Annual Database Service.xlsx')
library(readxl)
raw_data <- read.excel('../data/raw/FTA - 2018 Annual Database Service.xlsx')
raw_data <- read_xlsx('../data/raw/FTA - 2018 Annual Database Service.xlsx')
View(raw_data)
unique(raw_data$`Time Period`)
unique(raw_data$`Reporting Module`)
revalue
colnames(raw_data)
raw_data %>%
mutate(`Time Period` = recode(`Time Period`,
`Average Weekday - AM Peak` = `Weekday Peak`,
`Average Weekday - Midday` = `Weekday Off-Peak`,
`Average Weekday - PM Peak` = `Weekday Peak`,
`Average Weekday - Other` = `Weekday Off-Peak`,
`Average Typical Weekday` = `Average Weekday`,
`Average Typical Saturday` = `Weekend`,
`Average Typical Sunday` = `Weekend`,
`Annual Total` = `Annual Total`)) %>%
group_by(`NTD ID`,
`Agency Name`,
`Time Period`) %>%
summarize(upts = sum(`Unlinked Passenger Trips (UPT)`, na.rm = T),
passenger_miles = sum(`Passenger Miles`, na.rm = T))
raw_data %>%
mutate(`Time Period` = recode(`Time Period`,
`Weekday Peak` = `Average Weekday - AM Peak`,
`Weekday Off-Peak` = `Average Weekday - Midday`,
`Weekday Peak` = `Average Weekday - PM Peak`,
`Weekday Off-Peak` = `Average Weekday - Other`,
`Average Weekday` = `Average Typical Weekday`,
`Weekend` = `Average Typical Saturday`,
`Weekend` = `Average Typical Sunday`,
`Annual Total` = `Annual Total`)) %>%
group_by(`NTD ID`,
`Agency Name`,
`Time Period`) %>%
summarize(upts = sum(`Unlinked Passenger Trips (UPT)`, na.rm = T),
passenger_miles = sum(`Passenger Miles`, na.rm = T))
?recode
recode(raw_data$Time Period`,
`Average Weekday - AM Peak` = `Weekday Peak`,
`Average Weekday - Midday` = `Weekday Off-Peak`,
`Average Weekday - PM Peak` = `Weekday Peak`,
`Average Weekday - Other` = `Weekday Off-Peak`,
`Average Typical Weekday` = `Average Weekday`,
`Average Typical Saturday` = `Weekend`,
`Average Typical Sunday` = `Weekend`,
`Annual Total` = `Annual Total`)
recode(raw_data$`Time Period`,
`Average Weekday - AM Peak` = `Weekday Peak`,
`Average Weekday - Midday` = `Weekday Off-Peak`,
`Average Weekday - PM Peak` = `Weekday Peak`,
`Average Weekday - Other` = `Weekday Off-Peak`,
`Average Typical Weekday` = `Average Weekday`,
`Average Typical Saturday` = `Weekend`,
`Average Typical Sunday` = `Weekend`,
`Annual Total` = `Annual Total`)
unique(raw_data$`Time Period`)
raw_data %>%
mutate(`Time Period` = recode(`Time Period`,
'Average Weekday - AM Peak' = 'Weekday Peak',
'Average Weekday - Midday' = 'Weekday Off-Peak',
'Average Weekday - PM Peak' = 'Weekday Peak',
'Average Weekday - Other' = 'Weekday Off-Peak',
'Average Typical Weekday' = 'Average Weekday',
'Average Typical Saturday' = 'Weekend',
'Average Typical Sunday' = 'Weekend',
'Annual Total' = 'Annual Total')) %>%
group_by(`NTD ID`,
`Agency Name`,
`Time Period`) %>%
summarize(upts = sum(`Unlinked Passenger Trips (UPT)`, na.rm = T),
passenger_miles = sum(`Passenger Miles`, na.rm = T))
raw_data %>%
mutate(`Time Period` = recode(`Time Period`,
'Average Weekday - AM Peak' = 'Weekday Peak',
'Average Weekday - Midday' = 'Weekday Off-Peak',
'Average Weekday - PM Peak' = 'Weekday Peak',
'Average Weekday - Other' = 'Weekday Off-Peak',
'Average Typical Weekday' = 'Average Weekday',
'Average Typical Saturday' = 'Weekend',
'Average Typical Sunday' = 'Weekend',
'Annual Total' = 'Annual Total')) %>%
group_by(`NTD ID`,
`Agency Name`,
`Time Period`) %>%
summarize(upts = sum(`Unlinked Passenger Trips (UPT)`, na.rm = T),
passenger_miles = sum(`Passenger Miles`, na.rm = T)) %>%
View
raw_data %>%
mutate(`Time Period` = recode(`Time Period`,
'Average Weekday - AM Peak' = 'Weekday Peak',
'Average Weekday - Midday' = 'Weekday Off-Peak',
'Average Weekday - PM Peak' = 'Weekday Peak',
'Average Weekday - Other' = 'Weekday Off-Peak',
'Average Typical Weekday' = 'Average Weekday',
'Average Typical Saturday' = 'Weekend',
'Average Typical Sunday' = 'Weekend',
'Annual Total' = 'Annual Total')) %>%
group_by(`NTD ID`,
`Agency Name`,
`Time Period`) %>%
summarize(upts = sum(`Unlinked Passenger Trips (UPT)`),
passenger_miles = sum(`Passenger Miles`)) %>%
View
raw_data %>%
mutate(`Time Period` = recode(`Time Period`,
'Average Weekday - AM Peak' = 'Weekday Peak',
'Average Weekday - Midday' = 'Weekday Off-Peak',
'Average Weekday - PM Peak' = 'Weekday Peak',
'Average Weekday - Other' = 'Weekday Off-Peak',
'Average Typical Weekday' = 'Average Weekday',
'Average Typical Saturday' = 'Weekend',
'Average Typical Sunday' = 'Weekend',
'Annual Total' = 'Annual Total')) %>%
group_by(`NTD ID`,
`Agency Name`,
`Time Period`) %>%
summarize(upts = sum(`Unlinked Passenger Trips (UPT)`, na.rm = T),
passenger_miles = sum(`Passenger Miles`, na.rm = T)) %>%
View
raw_data %>%
mutate(`Time Period` = recode(`Time Period`,
'Average Weekday - AM Peak' = 'Weekday Peak',
'Average Weekday - Midday' = 'Weekday Off-Peak',
'Average Weekday - PM Peak' = 'Weekday Peak',
'Average Weekday - Other' = 'Weekday Off-Peak',
'Average Typical Weekday' = 'Average Weekday',
'Average Typical Saturday' = 'Weekend',
'Average Typical Sunday' = 'Weekend',
'Annual Total' = 'Annual Total')) %>%
group_by(`NTD ID`,
`Agency Name`,
`Time Period`) %>%
summarize(upts = sum(`Unlinked Passenger Trips (UPT)`),
passenger_miles = sum(`Passenger Miles`)) %>%
View
raw_data %>%
mutate(`Time Period` = recode(`Time Period`,
'Average Weekday - AM Peak' = 'Weekday Peak',
'Average Weekday - Midday' = 'Weekday Off-Peak',
'Average Weekday - PM Peak' = 'Weekday Peak',
'Average Weekday - Other' = 'Weekday Off-Peak',
'Average Typical Weekday' = 'Average Weekday',
'Average Typical Saturday' = 'Weekend',
'Average Typical Sunday' = 'Weekend',
'Annual Total' = 'Annual Total')) %>%
group_by(`NTD ID`,
`Agency Name`,
`Time Period`) %>%
summarize(upts = sum(`Unlinked Passenger Trips (UPT)`, na.rm = T),
passenger_miles = sum(`Passenger Miles`, na.rm = T)) %>%
View
raw_data %>%
mutate(`Time Period` = recode(`Time Period`,
'Average Weekday - AM Peak' = 'Weekday Peak',
'Average Weekday - Midday' = 'Weekday Off-Peak',
'Average Weekday - PM Peak' = 'Weekday Peak',
'Average Weekday - Other' = 'Weekday Off-Peak',
'Average Typical Weekday' = 'Average Weekday',
'Average Typical Saturday' = 'Weekend',
'Average Typical Sunday' = 'Weekend',
'Annual Total' = 'Annual Total')) %>%
group_by(`NTD ID`,
`Agency Name`,
`Time Period`) %>%
summarize(upts = sum(`Unlinked Passenger Trips (UPT)`, na.rm = T),
passenger_miles = sum(`Passenger Miles`, na.rm = T)) %>%
filter(upts == 0 && passenger_miles == 0) %>%
View
raw_data %>%
mutate(`Time Period` = recode(`Time Period`,
'Average Weekday - AM Peak' = 'Weekday Peak',
'Average Weekday - Midday' = 'Weekday Off-Peak',
'Average Weekday - PM Peak' = 'Weekday Peak',
'Average Weekday - Other' = 'Weekday Off-Peak',
'Average Typical Weekday' = 'Average Weekday',
'Average Typical Saturday' = 'Weekend',
'Average Typical Sunday' = 'Weekend',
'Annual Total' = 'Annual Total')) %>%
group_by(`NTD ID`,
`Agency Name`,
`Time Period`) %>%
summarize(upts = sum(`Unlinked Passenger Trips (UPT)`, na.rm = T),
passenger_miles = sum(`Passenger Miles`, na.rm = T)) %>%
filter(upts != 0 && passenger_miles != 0) %>%
View
raw_data %>%
mutate(`Time Period` = recode(`Time Period`,
'Average Weekday - AM Peak' = 'Weekday Peak',
'Average Weekday - Midday' = 'Weekday Off-Peak',
'Average Weekday - PM Peak' = 'Weekday Peak',
'Average Weekday - Other' = 'Weekday Off-Peak',
'Average Typical Weekday' = 'Average Weekday',
'Average Typical Saturday' = 'Weekend',
'Average Typical Sunday' = 'Weekend',
'Annual Total' = 'Annual Total')) %>%
group_by(`NTD ID`,
`Agency Name`,
`Time Period`) %>%
summarize(upts = sum(`Unlinked Passenger Trips (UPT)`, na.rm = T),
passenger_miles = sum(`Passenger Miles`, na.rm = T)) %>%
filter(upts == 0 && passenger_miles == 0) %>%
View
raw_data %>%
mutate(`Time Period` = recode(`Time Period`,
'Average Weekday - AM Peak' = 'Weekday Peak',
'Average Weekday - Midday' = 'Weekday Off-Peak',
'Average Weekday - PM Peak' = 'Weekday Peak',
'Average Weekday - Other' = 'Weekday Off-Peak',
'Average Typical Weekday' = 'Average Weekday',
'Average Typical Saturday' = 'Weekend',
'Average Typical Sunday' = 'Weekend',
'Annual Total' = 'Annual Total')) %>%
group_by(`NTD ID`,
`Agency Name`,
`Time Period`) %>%
summarize(upts = sum(`Unlinked Passenger Trips (UPT)`, na.rm = T),
passenger_miles = sum(`Passenger Miles`, na.rm = T)) %>%
filter(!(upts == 0 && passenger_miles == 0)) %>%
View
raw_data %>%
mutate(`Time Period` = recode(`Time Period`,
'Average Weekday - AM Peak' = 'Weekday Peak',
'Average Weekday - Midday' = 'Weekday Off-Peak',
'Average Weekday - PM Peak' = 'Weekday Peak',
'Average Weekday - Other' = 'Weekday Off-Peak',
'Average Typical Weekday' = 'Average Weekday',
'Average Typical Saturday' = 'Weekend',
'Average Typical Sunday' = 'Weekend',
'Annual Total' = 'Annual Total')) %>%
group_by(`NTD ID`,
`Agency Name`,
`Time Period`) %>%
summarize(upts = sum(`Unlinked Passenger Trips (UPT)`, na.rm = T),
passenger_miles = sum(`Passenger Miles`, na.rm = T)) %>%
filter(!(upts == 0 & passenger_miles == 0)) %>%
View
clean_data <- raw_data %>%
mutate(`Time Period` = recode(`Time Period`,
'Average Weekday - AM Peak' = 'Weekday Peak',
'Average Weekday - Midday' = 'Weekday Off-Peak',
'Average Weekday - PM Peak' = 'Weekday Peak',
'Average Weekday - Other' = 'Weekday Off-Peak',
'Average Typical Weekday' = 'Average Weekday',
'Average Typical Saturday' = 'Weekend',
'Average Typical Sunday' = 'Weekend',
'Annual Total' = 'Annual Total')) %>%
group_by(`NTD ID`,
`Agency Name`,
`Time Period`) %>%
summarize(num_trips = sum(`Unlinked Passenger Trips (UPT)`, na.rm = T),
passenger_miles = sum(`Passenger Miles`, na.rm = T)) %>%
filter(!(upts == 0 & passenger_miles == 0)) %>%
View
clean_data <- raw_data %>%
mutate(`Time Period` = recode(`Time Period`,
'Average Weekday - AM Peak' = 'Weekday Peak',
'Average Weekday - Midday' = 'Weekday Off-Peak',
'Average Weekday - PM Peak' = 'Weekday Peak',
'Average Weekday - Other' = 'Weekday Off-Peak',
'Average Typical Weekday' = 'Average Weekday',
'Average Typical Saturday' = 'Weekend',
'Average Typical Sunday' = 'Weekend',
'Annual Total' = 'Annual Total')) %>%
group_by(`NTD ID`,
`Agency Name`,
`Time Period`) %>%
summarize(num_trips = sum(`Unlinked Passenger Trips (UPT)`, na.rm = T),
passenger_miles = sum(`Passenger Miles`, na.rm = T)) %>%
filter(!(num_trips == 0 & passenger_miles == 0)) %>%
View
clean_data <- raw_data %>%
mutate(`Time Period` = recode(`Time Period`,
'Average Weekday - AM Peak' = 'Weekday Peak',
'Average Weekday - Midday' = 'Weekday Off-Peak',
'Average Weekday - PM Peak' = 'Weekday Peak',
'Average Weekday - Other' = 'Weekday Off-Peak',
'Average Typical Weekday' = 'Average Weekday',
'Average Typical Saturday' = 'Weekend',
'Average Typical Sunday' = 'Weekend',
'Annual Total' = 'Annual Total')) %>%
group_by(`NTD ID`,
`Agency Name`,
`Time Period`) %>%
summarize(num_trips = sum(`Unlinked Passenger Trips (UPT)`, na.rm = T),
passenger_miles = sum(`Passenger Miles`, na.rm = T)) %>%
filter(!(num_trips == 0 & passenger_miles == 0))
write.csv('../data/prepped/fta-2018-annual-database-service-all.csv',
stringsAsFactors = F)
write.csv('../data/prepped/fta-2018-annual-database-service-all.csv',
row.names = F)
write.csv(clean_data,
'../data/prepped/fta-2018-annual-database-service-all.csv',
row.names = F)
read.csv('../data/raw/Kaggle - US COVID-19 Risk Factors Assesment Data.csv',
stringsAsFactors = F)
raw_data <- read.csv('../data/raw/Kaggle - US COVID-19 Risk Factors Assessment Data.csv',
stringsAsFactors = F)
View(raw_data)
